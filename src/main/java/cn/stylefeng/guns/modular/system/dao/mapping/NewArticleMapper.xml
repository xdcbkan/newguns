<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.stylefeng.guns.modular.system.dao.NewArticleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.stylefeng.guns.modular.system.model.NewArticle">
        <id column="id" property="id"/>
        <result column="article_num" property="articleNum"/>
        <result column="main_title" property="mainTitle"/>
        <result column="subheading" property="subheading"/>
        <result column="content" property="content"/>
        <result column="prefix" property="prefix"/>
        <result column="article_status" property="articleStatus"/>
        <result column="picture_num" property="pictureNum"/>
        <result column="article_type_id" property="articleTypeId"/>
        <result column="examine1_id" property="examine1Id"/>
        <result column="examine2_id" property="examine2Id"/>
        <result column="layout_id" property="layoutId"/>
        <result column="operate_id" property="operateId"/>
        <result column="purchase_id" property="purchaseId"/>
        <result column="editor_new_flag" property="editorNewFlag"/>
        <result column="return_message" property="returnMessage"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="create_user_id" property="createUserId"/>
        <result column="update_user_id" property="updateUserId"/>
        <result column="article_price" property="articlePrice"/>
        <result column="prescription" property="prescription"/>
        <result column="label" property="label"/>
        <result column="project_type_id" property="projectTypeId"/>
        <result column="illustration_type" property="illustrationType"/>
        <result column="article_task_id" property="articleTaskId"/>
        <result column="new_main_title" property="newMainTitle"/>
        <result column="new_subheading" property="newSubheading"/>
        <result column="release_type" property="releaseType"/>
        <result column="word_count" property="wordCount"/>
        <result column="is_download" property="isDownload"/>
        <result column="dowanload_url" property="dowanloadUrl"/>
        <result column="dowanload_url_shen_he" property="dowanloadUrlShenHe"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, article_num, main_title, subheading, content, prefix, article_status, picture_num, article_type_id,editor_new_flag, return_message, create_time, update_time, create_user_id, update_user_id,prescription, label, project_type_id, illustration_type, article_task_id, new_main_title, new_subheading, release_type, word_count, is_download, dowanload_url, dowanload_url_shen_he
    </sql>

    <select id="selectArticleList" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from (select
        <include refid="Base_Column_List"/>
        from new_article union all select
        <include refid="Base_Column_List"/>
        from historical_article) a
        <where>
            a.editor_new_flag = 1
            <if test=" newMainTitle != null and newMainTitle != '' ">
                and (a.new_main_title like CONCAT('%',#{newMainTitle},'%')
                or a.article_num like CONCAT('%',#{newMainTitle},'%'))
            </if>
            <if test=" articleTypeId != null and articleTypeId != ''and articleTypeId != 0 ">
                and a.article_type_id = #{articleTypeId}
            </if>
            <if test=" createUserId != null and createUserId != '' ">
                and a.create_user_id = #{createUserId}
            </if>
            <if test=" prescription != null and prescription != '' and prescription != 0 ">
                and a.prescription = #{prescription}
            </if>
            <if test=" articleStatus != null and articleStatus != ''and articleTypeId != 20  ">
                and a.article_status in
                <foreach collection="articleStatus" index="index" item="i" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </if>
        </where>
        order by a.update_time desc
    </select>

    <select id="selectArticleCount" resultType="int">
        select count(id) from new_article where create_user_id = #{createUserId}
    </select>

    <!--审核领取文章-->
    <update id="receiveArticle" parameterType="cn.stylefeng.guns.modular.system.model.NewArticle">
        update new_article set article_status = #{articleStatus},examine1_id = #{examineId},examine2_id = #{examine2Id},update_time=#{updateTime} where id = #{id}
    </update>

    <!--配图/运营领取文章-->
    <update id="setReceiveArticle" parameterType="cn.stylefeng.guns.modular.system.model.NewArticle">
        update new_article set article_status = #{articleStatus},layout_id = #{layoutId},operate_id = #{operateId},update_time=#{updateTime} where id = #{id}
    </update>

    <!--可领取文章列表（复用审1、审2、配图）-->
    <select id="getArticleList" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from new_article
        <where>
            article_status != 1
            <if test=" articleStatus != null and articleStatus != '' ">
                and article_status = #{articleStatus}
            </if>
            <if test=" prescription != null and prescription != '' and prescription != 0 ">
                and prescription = #{prescription}
            </if>
            <if test=" newMainTitle != null and newMainTitle != '' ">
                and (new_main_title like CONCAT('%',#{newMainTitle},'%')
                or article_num like CONCAT('%',#{newMainTitle},'%'))
            </if>
            <if test=" articleTypeId != null and articleTypeId != '' ">
                and article_type_id in
                <foreach collection="articleTypeId" index="index" item="i" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </if>
        </where>
        order by update_time asc
    </select>


    <!--运营可领取文章列表-->
    <!--List<Map<String, Object>> getOperatorArticleList(@Param("title") String title, @Param("prescription") Integer prescription,  @Param("projectTypeId") String[] projectTypeId, @Param("articleTypeId") String[] articleTypeId);-->
    <select id="getOperatorArticleList" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from new_article
        <where>
            article_status = 11
            <if test=" prescription != null and prescription != '' and prescription != 0 ">
                and prescription = #{prescription}
            </if>
            <if test=" title != null and title != '' ">
                and (main_title like CONCAT('%',#{title},'%')
                or article_num like CONCAT('%',#{title},'%')
                or subheading like CONCAT('%',#{title},'%'))
            </if>
            <if test=" articleTypeId != null and articleTypeId != '' ">
                and article_type_id = #{articleTypeId}
            </if>
            and
            (project_type_id is null
            <if test=" projectTypeId != null and projectTypeId != '' ">
                or project_type_id in
                <foreach collection="projectTypeId" index="index" item="i" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </if>
            )
        </where>
        order by update_time desc
    </select>

    <!--运营可领取文章列表-->
    <!--List<Map<String, Object>> getOperatorAvailableArticleList(@Param("title") String title, @Param("prescription") Integer prescription, @Param("projectTypeId") String[] projectTypeId, @Param("articleTypeId") String[] articleTypeId);-->
    <select id="getOperatorAvailableArticleList" resultType="map">
        select * from
        (
        (select
        *
        from new_article a1
        <where>
            a1.project_type_id is null
            <if test=" projectTypeId != null and projectTypeId != '' ">
                or a1.project_type_id in
                <foreach collection="projectTypeId" index="index" item="i" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </if>
        </where>
        )
        union
        ( select
        *
        from new_article a2
        <where>
            a2.article_type_id is null
            <if test=" articleTypeId != null and articleTypeId != '' ">
                or a2.article_type_id in
                <foreach collection="articleTypeId" index="index" item="i" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </if>
        </where>
        )
        ) a3
        <where>
            a3.article_status = 11
            <if test=" prescription != null and prescription != '' and prescription != 0 ">
                and a3.prescription = #{prescription}
            </if>
            <if test=" title != null and title != '' ">
                and (a3.main_title like CONCAT('%',#{title},'%')
                or a3.article_num like CONCAT('%',#{title},'%')
                or a3.subheading like CONCAT('%',#{title},'%'))
            </if>
        </where>
        order by a3.update_time asc
    </select>

    <select id="selectMyArticle" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from new_article
        <where>
            article_status != 1
            <if test=" articleStatus != null and articleStatus != '' ">
                and article_status = #{articleStatus}
            </if>
            <if test=" prescription != null and prescription != '' and prescription != 0 ">
                and prescription = #{prescription}
            </if>
            <if test=" mainTitle != null and mainTitle != '' ">
                and (main_title like CONCAT('%',#{mainTitle},'%')
                or article_num like CONCAT('%',#{mainTitle},'%'))
            </if>
            <if test=" articleTypeId != null and articleTypeId != '' ">
                and article_type_id = #{articleTypeId}
            </if>
            <if test=" examine1Id != null and examine1Id != '' ">
                and examine1_id = #{examine1Id}
            </if>
            <if test=" examine2Id != null and examine2Id != '' ">
                and examine2_id = #{examine2Id}
            </if>
            <if test=" layoutId != null and layoutId != '' ">
                and layout_id = #{layoutId}
            </if>
            <if test=" operateId != null and operateId != '' ">
                and operate_id = #{operateId}
            </if>
        </where>
        order by update_time asc
    </select>

    <!--配图可完成文章列表-->
    <select id="getlayoutCompletedArticleList" resultType="map">
        select * from
        ( select
        *
        from new_article a2
        <where>
            a2.article_type_id is null
            <if test=" articleTypeId != null and articleTypeId != '' ">
                or a2.article_type_id in
                <foreach collection="articleTypeId" index="index" item="i" open="(" separator="," close=")">
                    #{i}
                </foreach>
            </if>
        </where>
        ) a3
        <where>
            a3.article_status = 11 or a3.article_status = 12
            <if test=" prescription != null and prescription != '' and prescription != 0 ">
                and a3.prescription = #{prescription}
            </if>
            <if test=" title != null and title != '' ">
                and (a3.main_title like CONCAT('%',#{title},'%')
                or a3.article_num like CONCAT('%',#{title},'%')
                or a3.subheading like CONCAT('%',#{title},'%'))
            </if>
        </where>
        order by a3.update_time asc
    </select>

    <!--审1退回-->
    <update id="examineReturn" parameterType="cn.stylefeng.guns.modular.system.model.NewArticle">
        update new_article set article_status = #{articleStatus},content = #{content} ,return_message = #{returnMessage},update_time = #{updateTime} where id = #{newArticleId}
    </update>

    <!--审通过-->
    <update id="examinePass" parameterType="cn.stylefeng.guns.modular.system.model.NewArticle">
        update new_article set article_status = #{articleStatus},update_time = #{updateTime} where id = #{newArticleId}
    </update>

    <!--文编每日统计-->
    <!--int editorStatisticsSubmit(int editorId);-->
    <select id="editorStatisticsSubmit" resultType="int">
        select count(id)
        from new_article
        where create_user_id = #{editorId}
        and article_status != 1
        and date(create_time) = curdate()
    </select>

    <!--int editorStatisticsExamine1Return(int editorId);-->
    <select id="editorStatisticsExamine1Return" resultType="int">
        select count(a.id)
        from (select
        <include refid="Base_Column_List"/>
        from new_article union all select
        <include refid="Base_Column_List"/>
        from historical_article) a
        where a.create_user_id = #{editorId}
        and a.article_status = 6
        and date(a.update_time) = curdate()
    </select>

    <!--int editorStatisticsExamine2Return(int editorId);-->
    <select id="editorStatisticsExamine2Return" resultType="int">
        select count(a.id)
        from (select
        <include refid="Base_Column_List"/>
        from new_article union all select
        <include refid="Base_Column_List"/>
        from historical_article) a
        where a.create_user_id = #{editorId}
        and a.article_status = 7
        and date(a.update_time) = curdate()
    </select>

    <!--int editorStatisticsExamine1ReturnEdit1(int editorId);-->
    <select id="editorStatisticsExamine1ReturnEdit1" resultType="int">
        select count(a.id)
        from (select
        <include refid="Base_Column_List"/>
        from new_article union all select
        <include refid="Base_Column_List"/>
        from historical_article) a
        where a.create_user_id = #{editorId}
        and a.prefix = 2
        and date(a.update_time) = curdate()
    </select>

    <!--int editorStatisticsExamine1ReturnEdit2(int editorId);-->
    <select id="editorStatisticsExamine1ReturnEdit2" resultType="int">
        select count(a.id)
        from (select
        <include refid="Base_Column_List"/>
        from new_article union all select
        <include refid="Base_Column_List"/>
        from historical_article) a
        where a.create_user_id = #{editorId}
        and a.prefix = 3
        and date(a.update_time) = curdate()
    </select>

    <!--int editorStatisticsExamine2ReturnEdit1(int editorId);-->
    <select id="editorStatisticsExamine2ReturnEdit1" resultType="int">
        select count(a.id)
        from (select
        <include refid="Base_Column_List"/>
        from new_article union all select
        <include refid="Base_Column_List"/>
        from historical_article) a
        where a.create_user_id = #{editorId}
        and a.prefix = 4
        and date(a.update_time) = curdate()
    </select>

    <!--int editorStatisticsExamine2ReturnEdit2(int editorId);-->
    <select id="editorStatisticsExamine2ReturnEdit2" resultType="int">
        select count(a.id)
        from (select
        <include refid="Base_Column_List"/>
        from new_article union all select
        <include refid="Base_Column_List"/>
        from historical_article) a
        where a.create_user_id = #{editorId}
        and a.prefix = 5
        and date(a.update_time) = curdate()
    </select>

    <!--int editorStatisticsAbolish(int editorId);-->
    <select id="editorStatisticsAbolish" resultType="int">
        select count(id)
        from new_article
        where create_user_id = #{editorId}
        and date(update_time) = curdate()
        and article_status in (8,14)
    </select>

    <!--int editorStatisticsExamine2Pass(int editorId);-->
    <select id="editorStatisticsExamine2Pass" resultType="int">
        select count(id)
        from new_article
        where create_user_id = #{editorId}
        and date(update_time) = curdate()
        and article_status in (9,10,11,12,13,14)
    </select>

    <!--int editorStatisticsOperatorAbolish(int editorId);-->
    <select id="editorStatisticsOperatorAbolish" resultType="int">
        select count(id)
        from new_article
        where create_user_id = #{editorId}
        and date(update_time) = curdate()
        and article_status = 14
    </select>

    <!--运营作废-->
    <update id="cancelArticle" parameterType="cn.stylefeng.guns.modular.system.model.NewArticle">
        update new_article set article_status = 14, return_message = #{returnMessage} where id=#{id}
    </update>

    <!--运营查看自己操作过的版-->
    <!--List<Map<String, Object>> getOperationRecord(@Param("condition") String condition, @Param("articleTypeId") Integer articleTypeId, @Param("prescription") Integer prescription, @Param("userId") Integer userId);-->
    <select id="getOperationRecord" resultType="map">
        select
        <include refid="Base_Column_List"/>
        from new_article
        <where>
            operate_id = #{userId}
            and article_status = 14
            <if test=" condition != null and condition != '' ">
                and (main_title like CONCAT('%',#{condition},'%')
                or article_num like CONCAT('%',#{condition},'%')
                or subheading like CONCAT('%',#{condition},'%'))
            </if>
            <if test=" articleTypeId != null and articleTypeId != ''and articleTypeId != 0 ">
                and article_type_id = #{articleTypeId}
            </if>
            <if test=" prescription != null and prescription != '' and prescription != 0 ">
                and prescription = #{prescription}
            </if>
        </where>
        order by update_time desc
        limit 200
    </select>

</mapper>
